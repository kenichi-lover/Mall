"""
Django settings for django02 project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-1%2#@_3x8-luw13!$1o34dmswo_itb71s-r5mu-5yqk0kze42q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'user',
    'product',
    'myemail',
    'event',
    'order',
    'mycache',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django02.urls'
import os
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django02.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'mall',
        'USER': 'root',
        'PASSWORD': 'zhangkai0928',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'user.MyUser'

LOGIN_REDIRECT_URL = '/'

# 邮箱配置，在开发阶段，为了不真的发送邮件，可以暂时将 EMAIL_BACKEND 设置为控制台后端
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # 控制台后端
EMAIL_HOST = 'smtp.qq.com' # # 邮件服务器地址 (例如 smtp.gmail.com, smtp.qq.com 等)
EMAIL_PORT = 587 # 替换为您的 SMTP 服务器端口
EMAIL_USE_TLS = True # 如果使用 TLS，设置为 True
# EMAIL_USE_SSL = False # 如果使用 SSL，设置为 True，并设置 EMAIL_PORT 为 465
EMAIL_HOST_USER = '125599425@qq.com' # 替换为您的邮箱账号
EMAIL_HOST_PASSWORD = 'ebsxwwewddpibgcj' # 替换为您的邮箱密码或授权码 << 安全警告！
DEFAULT_FROM_EMAIL = '125599425@qq.com' # 默认的发件人邮箱地址
SERVER_EMAIL = 'errors@yourwebsite.com' # 用于发送错误报告等


# 支付宝配置
ALIPAY_APPID = "2021000148672716" # 请替换为您的应用 ID

# 对于 APP_PRIVATE_KEY_STRING 这个变量，最好是从文件或环境变量中加载获取。
# Example:
# with open('path/to/your/app_private_key.pem', 'r') as f:
#     ALIPAY_APP_PRIVATE_KEY_STRING = f.read()
ALIPAY_PRIVATE_KEY_FILE = os.path.join(BASE_DIR, 'alipay','app_private_key.pem')  

# 对于 ALIPAY_PUBLIC_KEY_STRING 这个变量，最好是从文件或环境变量中加载获取。
ALIPAY_PUBLIC_KEY_FILE = os.path.join(BASE_DIR, 'alipay','alipay_public_key.pem') 

ALIPAY_DEBUG = True   # 对于测试环境为真，对于生产环境为假
# 用于生产环境，请确保将 ALIPAY_DEBUG 设置为 False，并使用生产密钥/应用 ID
# 如果您使用了自定义用户模型，请确保已设置好 AUTH_USER_MODEL 参数
# AUTH_USER_MODEL = 'user.MyUser' # 或者根据您的用户应用程序及模型的名称进行相应设置

ORDER_STATUS_UNPAID = 'unpaid' # 请确保与您的models.py中的实际值一致
ORDER_STATUS_PAID = 'paid'     # 请确保与您的models.py中的实际值一致
ORDER_STATUS_CANCELED = 'canceled' # 请确保与您的models.py中的实际值一致

# 缓存
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache',
        'TIMEOUT': 300, # 缓存保存时间，单位秒,这个设置等价于 CACHE_TTL 和 DEFAULT_CACHE_TTL，并且会覆盖它们。
                        # TIMEOUT 是 CACHES 字典内部的键，用于配置缓存的过期时间。
        'OPTIONS': {
            'MAX_ENTRIES': 100, # 缓存最大数据条数
            'CULL_FREQUENCY': 2, # 缓存条数达到最大值时，删除 1/X 的缓存数据.指定当缓存条目数量达到 MAX_ENTRIES 时，删除缓存条目的频率。
                                 # Django 会删除大约 1/CULL_FREQUENCY (即 1/2，也就是50%) 的缓存条目。CULL_FREQUENCY 必须是大于 0 的整数。
        }

    }
}

SESSION_COOKIE_SECURE = False
CSRF_COOKIE_SECURE = False
SESSION_SAVE_EVERY_REQUEST = True  # 仅在开发环境中启用